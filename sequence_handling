#!/bin/bash

set -o pipefail

function Usage() {
    echo -e "\
Usage:  `basename $0` <routine> Config \n
Where:  <routine> is one of: \n
            1 | Quality_Assessment \n
            2 | Read_Depths \n
            3 | Quality_Trimming \n
            4 | Read_Map \n
            5 | Process_SAM \n
            6 | Plot_Coverage \n
And:    Config is the full file path to the configuration file
" >&2
    exit 1
}

export -f Usage

#   Where is 'sequence_handling' located?
SEQUENCE_HANDLING=`dirname "$0"`

#   If we have less than two arguments
if [[ "$#" -lt 1 ]]; then Usage; fi # Display the usage message and exit

ROUTINE=$1 # What routine are we running?
CONFIG=$2 # Where is our config file?

#   If the specified config exists
if [[ -f "${CONFIG}" ]]
then
    source "${CONFIG}" # Source it
    bash "${CONFIG}" > /dev/null 2> /dev/null # Load any modules
    source "${SEQUENCE_HANDLING}"/utils.sh # And the utils script
else # If it doesn't
    echo "Please specify a valid config file." >&2 # Print error message
    exit 1 # Exit with non-zero exit status
fi

#   Run sequence_handling
case "${ROUTINE}" in
    1|Quality_Assessment)
        echo "`basename $0`: Assessing quality..." >&2
        checkDependencies Assess_Quality_Dependencies[@] # Check to see if dependencies are installed
        if [[ "$?" -ne 0 ]]; then exit 1; fi # If we're missing a dependency, exit out with error
        # checkSamples "${RAW_SAMPLES}" # Check to see if samples and sample list exists
        # if [[ "$?" -ne 0 ]]; then exit 1; fi # If we're missing a sample or our list, exit out with error
        # echo "Assess_Quality ${RAW_SAMPLES} ${OUT_DIR} ${PROJECT}" | qsub -l "${QC_QSUB}" -m abe -M "${EMAIL}" -N "${PROJECT}"_Quality_Assessment
        ;;
    2|Read_Depths)
        echo "`basename $0`:"
        echo "Calculating read depths is not yet implemented"
        ;;
    3|Quality_Trimming )
        echo "`basename $0`:"
        echo "Quality trimming is not yet implemented"
        ;;
    4|Read_Map )
        echo "`basename $0`:"
        echo "Read mapping is not yet implemented"
        ;;
    5|Process_SAM )
        echo "`basename $0`:"
        echo "SAM processing is not yet implemented"
        ;;
    6|Plot_Coverage )
        echo "`basename $0`:"
        echo "Coverage mapping is not yet implemented"
        ;;
    * )
        Usage
        ;;
esac
